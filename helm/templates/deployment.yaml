apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-java-app
  labels:
    app: {{ .Release.Name }}-java-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-java-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-java-app
    spec:
      initContainers:
        - name: wait-for-tekton-taskrun
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Wait for the Tekton TaskRun to complete successfully
              while [[ "$(kubectl get taskrun hqoas-spring-build-taskrun -n tekton-tasks -o jsonpath='{.status.conditions[?(@.type=="Succeeded")].status}')" != "True" ]]; do
                sleep 5
              done
          securityContext:
            runAsUser: 0
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
      containers:
        - name: {{ .Release.Name }}-java-app-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
          env:
            # Define environment variables here if needed
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
      # Add additional settings like volumes, secrets, etc. if necessary
